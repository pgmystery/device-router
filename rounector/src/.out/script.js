let device_finder_data;frameSites[1]="device_finder",frameFunctions.device_finder=device_finder_frame;const device_finder_devices={};function device_finder_frame(){document.getElementById("device_finder_form").addEventListener("submit",o=>{o.preventDefault(),device_finder_data=new FormData(document.querySelector("form")),async function(){Rounector.data.device_type=null,Rounector.data.device_name=null,Rounector.data.device_version=null,e.selectedIndex>0&&(Rounector.data.device_type=e.options[e.selectedIndex].text);t.selectedIndex>0&&(Rounector.data.device_name=t.options[t.selectedIndex].text);n.selectedIndex>0&&(Rounector.data.device_version=n.options[n.selectedIndex].text);const o=Rounector.url+"/match/hardware/finder/?type=[DEVICE_TYPE]&name=[DEVICE_NAME]&version=[DEVICE_VERSION]";let d;try{return d=await function(e,t=null,n=null){return new Promise((d,s)=>{let r=o;r=e?r.replace("[DEVICE_TYPE]",e):r.replace("[DEVICE_TYPE]","all"),r=t?r.replace("[DEVICE_NAME]",t):r.replace("&name=[DEVICE_NAME]",""),r=n?r.replace("[DEVICE_VERSION]",n):r.replace("&version=[DEVICE_VERSION]",""),console.log(r);try{let e="";const t=requests.get(r,t=>{t.on("data",t=>{e+=t}),t.on("end",()=>{d(JSON.parse(e))}),t.on("error",e=>{s(e)})});t.end()}catch(e){console.log(e),s(e)}})}(Rounector.data.device_type,Rounector.data.device_name,Rounector.data.device_version),console.log(d),Rounector.data.device_type=d,d}catch(e){console.log(e)}}().then(e=>{e&&loadFrameNext()}).catch(e=>{console.log("ERROR"),console.log(e)})}),document.getElementById("device_finder_back").addEventListener("click",()=>{device_finder_data=new FormData(document.querySelector("form")),loadFrameBack()});const e=document.getElementById("device_type"),t=document.getElementById("device"),n=document.getElementById("device_version");function o(e){e.innerHTML="",d(e,"Choose automatically..."),e.disabled=!0}function d(e,t){const n=document.createElement("option");n.text=t,e.add(n)}e.addEventListener("change",()=>{if(o(t),o(n),e.selectedIndex>0){const n=Object.keys(device_finder_devices[e.options[e.selectedIndex].text]);for(let e in n)n.hasOwnProperty(e)&&d(t,n[e]);t.options.length>1&&(t.disabled=!1)}}),t.addEventListener("change",()=>{if(o(n),t.selectedIndex>0){const o=device_finder_devices[e.options[e.selectedIndex].text][t.options[t.selectedIndex].text];for(let e in o)o.hasOwnProperty(e)&&d(n,o[e]);n.options.length>1&&(n.disabled=!1)}}),device_finder_data||requests.get(Rounector.url+"/api/1.0/rounector_hardware_list/",t=>{let n="";t.on("data",e=>{n+=e}),t.on("end",()=>{n=(n=JSON.parse(n)).results;for(let t in n)if(n.hasOwnProperty(t)){const o=n[t];if(Object.keys(o).includes("type","name","version")){const t=decodeURIComponent(o.type),n=decodeURIComponent(o.name),s=decodeURIComponent(o.version);device_finder_devices.hasOwnProperty(t)||(device_finder_devices[t]={},d(e,t)),device_finder_devices[t].hasOwnProperty(n)||(device_finder_devices[t][n]=[]),device_finder_devices[t][n].includes(s)||device_finder_devices[t][n].push(s)}}device_finder_data=new FormData(document.getElementById("device_finder_form"))})}).on("error",e=>{console.log("ERROR: "+e.message)})}let register_token_data;function register_token_frame(){document.getElementById("register_token_form").addEventListener("submit",e=>{e.preventDefault(),register_token_data=new FormData(document.getElementById("register_token_form")),Rounector.data.register_token=register_token_data.get("register_token_input"),Rounector.data.device_info_description=register_token_data.get("register_token_description"),loadFrameNext()}),register_token_data&&(document.getElementById("register_token_input").value=register_token_data.get("register_token_input"),document.getElementById("register_token_description").value=register_token_data.get("register_token_description"))}document.getElementById("headerText").textContent="Rounector v"+appVersion.toUpperCase().replace("-"," "),document.getElementById("exit").addEventListener("click",e=>{e.preventDefault(),closeApp()}),frameSites[0]="register_token",frameFunctions.register_token=register_token_frame,loadFrame("register_token");const Rounector={url:"http://192.168.1.5:8000",request:new XMLHttpRequest,client:new SSHClient,client2:new SSHClient2,data:{},rounection:function(){try{if(this.request.open("GET",this.url,!1),this.request.send(null),200!==this.request.status)return!1}catch(e){return console.log(e),dialog.showErrorBox("No connection to the webserver","Cloud not connect to the webserver!"),!1}return console.log("DONE!"),!0},connect:async function(e,t){return await this.client2.connect(e).then(()=>this.client2.execCommand(t).then(e=>e.stderr?e.stderr:e.stdout))}};let ssh_connect_data;function ssh_connect(){function e(e){for(const[e,n]of Object.entries(Rounector.data.device_type))for(const[o,d]of Object.entries(n))for(const[n,s]of Object.entries(d))if(t(s))return[e,o,n]}async function t(t){try{Rounector.data.ssh_private_key||await Rounector.connect(loginData,t).then(t=>{console.log("RESULT BEGIN"),console.log(t),console.log("RESULT END"),e()})}catch(e){console.log(e)}}document.getElementById("ssh_connect_back").addEventListener("click",()=>{device_finder_data=new FormData(document.querySelector("form")),loadFrameBack()}),document.getElementById("ipv4_radio").addEventListener("change",()=>{const e=document.getElementById("ssh_ipv4_address"),t=document.getElementById("ssh_ipv6_address");t.hidden=!0,e.hidden=!1,e.required=!0,t.required=!1,e.focus()}),document.getElementById("ipv6_radio").addEventListener("change",()=>{const e=document.getElementById("ssh_ipv4_address"),t=document.getElementById("ssh_ipv6_address");e.hidden=!0,t.hidden=!1,t.required=!0,e.required=!1,t.focus()}),document.getElementById("password_radio").addEventListener("change",()=>{const e=document.getElementById("ssh_password");document.getElementById("ssh_key_path").required=!1,document.getElementById("ssh_key").classList.add("hidden"),e.placeholder="SSH-Password",e.focus()}),document.getElementById("pkey_radio").addEventListener("change",()=>{const e=document.getElementById("ssh_key_path");e.required=!0,document.getElementById("ssh_key").classList.remove("hidden"),document.getElementById("ssh_password").placeholder="Private-Key password",e.focus()}),document.getElementById("ssh_key_path_button").addEventListener("click",()=>{dialog.showOpenDialog({properties:["openFile"]},e=>{e&&(document.getElementById("ssh_key_path").value=e[0])})}),document.getElementById("ssh_connect_form").addEventListener("submit",t=>{t.preventDefault(),function(){ssh_connect_data=new FormData(document.querySelector("form"));const t={},n=ssh_connect_data.get("ip_type");Rounector.data.ssh_method=n,"ipv4"===n?Rounector.data.ssh_ip=ssh_connect_data.get("ssh_ipv4"):"ipv6"===n&&(Rounector.data.ssh_ip=ssh_connect_data.get("ssh_ipv6"));t.host=Rounector.data.ssh_ip,Rounector.data.ssh_port=ssh_connect_data.get("ssh_port"),Rounector.data.ssh_username=ssh_connect_data.get("ssh_username"),t.port=Rounector.data.ssh_port,t.username=Rounector.data.ssh_username;const o=ssh_connect_data.get("password_type");Rounector.data.ssh_password=ssh_connect_data.get("ssh_password"),"password"===o?(Rounector.data.ssh_private_key="",t.password=Rounector.data.ssh_password):"pkey"===o&&(Rounector.data.ssh_private_key=ssh_connect_data.get("key_path"),t.privateKey=Rounector.data.ssh_private_key,t.passphrase=Rounector.data.ssh_password);e(t)}()})}frameSites[2]="ssh_connect",frameFunctions.ssh_connect=ssh_connect;